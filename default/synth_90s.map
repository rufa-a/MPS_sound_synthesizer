Archive member included because of file (symbol)

c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1\libgcc.a(_mulhi3.o)
                              synth_90s.o (__mulhi3)
c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1\libgcc.a(_udivmodqi4.o)
                              synth_90s.o (__udivmodqi4)
c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1\libgcc.a(_udivmodhi4.o)
                              synth_90s.o (__udivmodhi4)
c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1\libgcc.a(_divmodhi4.o)
                              synth_90s.o (__divmodhi4)
c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1\libgcc.a(_exit.o)
                              c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/crts8515.o (exit)
c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1\libgcc.a(_copy_data.o)
                              synth_90s.o (__do_copy_data)
c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1\libgcc.a(_clear_bss.o)
                              synth_90s.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

write_buffer        0xea              synth_90s.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00002000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/crts8515.o
LOAD synth_90s.o
LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1\libgcc.a
LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib\libc.a
LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x740
 *(.vectors)
 .vectors       0x00000000       0x1a c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/crts8515.o
                0x00000000                __vector_default
                0x00000000                __vectors
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000001a                . = ALIGN (0x2)
                0x0000001a                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000001a        0x0 linker stubs
 *(.trampolines*)
                0x0000001a                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000001a                __ctors_start = .
 *(.ctors)
                0x0000001a                __ctors_end = .
                0x0000001a                __dtors_start = .
 *(.dtors)
                0x0000001a                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000001a        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/crts8515.o
                0x0000001a                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000001a        0xc c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/crts8515.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000026       0x18 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1\libgcc.a(_copy_data.o)
                0x00000026                __do_copy_data
 .init4         0x0000003e       0x10 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1\libgcc.a(_clear_bss.o)
                0x0000003e                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000004e        0x4 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/crts8515.o
 *(.init9)
 *(.text)
 .text          0x00000052        0x2 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/crts8515.o
                0x00000052                __vector_1
                0x00000052                __vector_12
                0x00000052                __bad_interrupt
                0x00000052                __vector_6
                0x00000052                __vector_3
                0x00000052                __vector_11
                0x00000052                __vector_7
                0x00000052                __vector_5
                0x00000052                __vector_4
                0x00000052                __vector_9
                0x00000052                __vector_2
                0x00000052                __vector_8
                0x00000052                __vector_10
 .text          0x00000054      0x65a synth_90s.o
                0x00000054                uart_init
                0x00000060                uart_receive
                0x00000068                send_Uart
                0x00000070                send_Uart_str
                0x0000009c                send_Uart_number
                0x000000a4                send_int_Uart
                0x000000f6                info_output
                0x00000164                write_melody
                0x00000378                format_check
                0x000003be                piano
                0x000003f6                duration_delay
                0x00000418                note
                0x00000432                play_melody
                0x00000494                main
 .text          0x000006ae        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1\libgcc.a(_mulhi3.o)
 .text          0x000006ae        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1\libgcc.a(_udivmodqi4.o)
 .text          0x000006ae        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1\libgcc.a(_udivmodhi4.o)
 .text          0x000006ae        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1\libgcc.a(_divmodhi4.o)
 .text          0x000006ae        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1\libgcc.a(_exit.o)
 .text          0x000006ae        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1\libgcc.a(_copy_data.o)
 .text          0x000006ae        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1\libgcc.a(_clear_bss.o)
                0x000006ae                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x000006ae       0x24 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1\libgcc.a(_mulhi3.o)
                0x000006ae                __mulhi3
 .text.libgcc   0x000006d2       0x18 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1\libgcc.a(_udivmodqi4.o)
                0x000006d2                __udivmodqi4
 .text.libgcc   0x000006ea       0x2c c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1\libgcc.a(_udivmodhi4.o)
                0x000006ea                __udivmodhi4
 .text.libgcc   0x00000716       0x26 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1\libgcc.a(_divmodhi4.o)
                0x00000716                _div
                0x00000716                __divmodhi4
 .text.libgcc   0x0000073c        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1\libgcc.a(_exit.o)
 .text.libgcc   0x0000073c        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1\libgcc.a(_copy_data.o)
 .text.libgcc   0x0000073c        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1\libgcc.a(_clear_bss.o)
                0x0000073c                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000073c        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1\libgcc.a(_exit.o)
                0x0000073c                _exit
                0x0000073c                exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000073c        0x4 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1\libgcc.a(_exit.o)
 *(.fini0)
                0x00000740                _etext = .

.data           0x00800060       0xe8 load address 0x00000740
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/crts8515.o
 .data          0x00800060       0xe8 synth_90s.o
                0x00800128                height
                0x0080013a                duration
 .data          0x00800148        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1\libgcc.a(_mulhi3.o)
 .data          0x00800148        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1\libgcc.a(_udivmodqi4.o)
 .data          0x00800148        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1\libgcc.a(_udivmodhi4.o)
 .data          0x00800148        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1\libgcc.a(_divmodhi4.o)
 .data          0x00800148        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1\libgcc.a(_exit.o)
 .data          0x00800148        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1\libgcc.a(_copy_data.o)
 .data          0x00800148        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1\libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800148                . = ALIGN (0x2)
                0x00800148                _edata = .
                0x00800148                PROVIDE (__data_end, .)

.bss            0x00800148       0xea
                0x00800148                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800148        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/crts8515.o
 .bss           0x00800148        0x0 synth_90s.o
 .bss           0x00800148        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1\libgcc.a(_mulhi3.o)
 .bss           0x00800148        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1\libgcc.a(_udivmodqi4.o)
 .bss           0x00800148        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1\libgcc.a(_udivmodhi4.o)
 .bss           0x00800148        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1\libgcc.a(_divmodhi4.o)
 .bss           0x00800148        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1\libgcc.a(_exit.o)
 .bss           0x00800148        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1\libgcc.a(_copy_data.o)
 .bss           0x00800148        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1\libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00800148       0xea synth_90s.o
                0x00800148                write_buffer
                0x00800232                PROVIDE (__bss_end, .)
                0x00000740                __data_load_start = LOADADDR (.data)
                0x00000828                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800232        0x0
                0x00800232                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800232                PROVIDE (__noinit_end, .)
                0x00800232                _end = .
                0x00800232                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000      0x6cc
 *(.stab)
 .stab          0x00000000      0x6cc c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/crts8515.o

.stabstr        0x00000000       0x85
 *(.stabstr)
 .stabstr       0x00000000       0x85 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/crts8515.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0x20
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 synth_90s.o

.debug_pubnames
                0x00000000      0x112
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000      0x112 synth_90s.o

.debug_info     0x00000000      0x895
 *(.debug_info)
 .debug_info    0x00000000      0x895 synth_90s.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x2a4
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x2a4 synth_90s.o

.debug_line     0x00000000      0x776
 *(.debug_line)
 .debug_line    0x00000000      0x776 synth_90s.o

.debug_frame    0x00000000       0xf0
 *(.debug_frame)
 .debug_frame   0x00000000       0xf0 synth_90s.o

.debug_str      0x00000000      0x203
 *(.debug_str)
 .debug_str     0x00000000      0x203 synth_90s.o
                                0x243 (size before relaxing)

.debug_loc      0x00000000      0x3dc
 *(.debug_loc)
 .debug_loc     0x00000000      0x3dc synth_90s.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(synth_90s.elf elf32-avr)
LOAD linker stubs

.debug_pubtypes
                0x00000000       0x38
 .debug_pubtypes
                0x00000000       0x38 synth_90s.o

.debug_ranges   0x00000000       0x18
 .debug_ranges  0x00000000       0x18 synth_90s.o
